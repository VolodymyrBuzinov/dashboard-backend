{
  "openapi": "3.0.1",

  "info": {
    "title": "Questify Api",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://dashboard-go-it.herokuapp.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth methods"
    },
    {
      "name": "Tasks",
      "description": "Tasks methods"
    }
  ],

  "paths": {
    "/users/signup": {
      "post": {
        "summary": "Signup Method",
        "tags": ["Auth"],
        "parameters": [],
        "requestBody": {
          "description": "Registration body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/registrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/registrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.Validation Error",
            "content": {}
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "Login Method",
        "tags": ["Auth"],
        "parameters": [],
        "requestBody": {
          "description": "Login body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/loginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/loginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {}
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "summary": "Logout Method",
        "tags": ["Auth"],
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Success",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/UNAUTHORIZED"
                }
              }
            }
          }
        }
      }
    },
    "/users/verify": {
      "post": {
        "summary": "Check Verification, Send New Email",
        "tags": ["Auth"],
        "parameters": [],
        "requestBody": {
          "description": "Verify body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/verifyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/verificationResponse"
                }
              }
            }
          },

          "400": {
            "description": "Verification has already been passed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/verificationErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Verification has already been passed",
            "content": {}
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "summary": "Get current user",
        "tags": ["Auth"],
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/currentResponse"
                }
              }
            }
          },

          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/UNAUTHORIZED"
                }
              }
            }
          }
        }
      }
    },
    "/users/refresh": {
      "post": {
        "summary": "Get new tokens",
        "tags": ["Auth"],
        "parameters": [],
        "requestBody": {
          "description": "Refresh body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/refreshRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/refreshResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/UNAUTHORIZED"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/refreshError"
                }
              }
            }
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "summary": "Get all tasks",
        "tags": ["Tasks"],
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/getAllTasksResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/UNAUTHORIZED"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Post new task",
        "tags": ["Tasks"],
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "Task body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/createTaskRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/createTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {}
          },
          "401": {
            "description": "UNAUTHORIZED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/UNAUTHORIZED"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{taskId}": {
      "put": {
        "summary": "Update task",
        "tags": ["Tasks"],
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id of task"
          }
        ],
        "requestBody": {
          "description": "Task body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/createTaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/deleteTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {}
          },
          "401": {
            "description": "UNAUTHORIZED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/UNAUTHORIZED"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/taskNotFound"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete task by id",
        "tags": ["Tasks"],
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id of task"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/deleteTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {}
          },
          "401": {
            "description": "UNAUTHORIZED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/UNAUTHORIZED"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/taskNotFound"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{taskId}/done": {
      "patch": {
        "summary": "Update status done of task",
        "tags": ["Tasks"],
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id of task"
          }
        ],
        "requestBody": {
          "description": "Task body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/updateStatusTaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/deleteTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {}
          },
          "401": {
            "description": "UNAUTHORIZED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/UNAUTHORIZED"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/taskNotFound"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "refreshError": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "Server Error"
          },
          "code": {
            "type": "integer",
            "example": "500"
          },
          "message": {
            "type": "string",
            "example": "invalid signature"
          },
          "data": {
            "type": "string",
            "example": "500"
          }
        }
      },
      "refreshRequest": {
        "type": "object",
        "required": ["refreshToken"],
        "properties": {
          "refreshToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
            "description": "Users RefreshToken"
          }
        }
      },
      "refreshResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "Success"
          },
          "code": {
            "type": "integer",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwYjhhNmRkNTk3ZjJiMWYzNGU5OTdkYyIsImVtYWlsIjoidm92YUBnbWFpbC5jb20iLCJpYXQiOjE2MjI3MTQxMDYsImV4cCI6MTYyMjcxNzcwNn0.o63iY3Aek9yYrmdEEPl0c15o36ILs44AnX4oytReFxE",
                "description": "Users Token"
              },
              "refreshToken": {
                "type": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwYjhhNmRkNTk3ZjJiMWYzNGU5OTdkYyIsImVtYWlsIjoidm92YUBnbWFpbC5jb20iLCJpYXQiOjE2MjI3MTQxMDYsImV4cCI6MTYyMjcxNzcwNn0.o63iY3Aek9yYrmdEEPl0c15o36ILs44AnX4oytReFxE",
                "description": "Refresh Token"
              },
              "user": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Users Email"
                  },
                  "id": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5c",
                    "description": "Users Id"
                  }
                }
              }
            }
          }
        }
      },
      "currentResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "example@gmail.com"
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
          },
          "verify": {
            "type": "boolean",
            "example": false
          },
          "verifyToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
          }
        }
      },
      "verifyRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "example@gmail.com",
            "required": true
          }
        }
      },
      "verificationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "Success"
          },
          "code": {
            "type": "integer",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Verification successful",
                "description": "Verification status"
              }
            }
          }
        }
      },
      "verificationErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "Error"
          },
          "code": {
            "type": "integer",
            "example": 400
          },
          "message": {
            "type": "string",
            "example": "Verification has already been passed",
            "description": "Verification status"
          }
        }
      },
      "registrationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "Success"
          },
          "code": {
            "type": "integer",
            "example": 201
          },
          "data": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Drakon",
                "description": "Users Name"
              },
              "email": {
                "type": "string",
                "format": "email",
                "description": "Users Email"
              },
              "id": {
                "type": "string",
                "example": "123456789564645",
                "description": "Users ID"
              }
            }
          }
        }
      },
      "registrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Drakon",
            "description": "Users Name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Users Email"
          },
          "password": {
            "type": "string",
            "example": "parol123",
            "description": "Users Password"
          }
        }
      },
      "loginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "Users Email"
          },
          "password": {
            "type": "string",
            "example": "parol123",
            "description": "Users Password"
          }
        }
      },
      "loginResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "Success"
          },
          "code": {
            "type": "integer",
            "example": 201
          },
          "data": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwYjhhNmRkNTk3ZjJiMWYzNGU5OTdkYyIsImVtYWlsIjoidm92YUBnbWFpbC5jb20iLCJpYXQiOjE2MjI3MTQxMDYsImV4cCI6MTYyMjcxNzcwNn0.o63iY3Aek9yYrmdEEPl0c15o36ILs44AnX4oytReFxE",
                "description": "Users Token"
              },
              "refreshToken": {
                "type": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwYjhhNmRkNTk3ZjJiMWYzNGU5OTdkYyIsImVtYWlsIjoidm92YUBnbWFpbC5jb20iLCJpYXQiOjE2MjI3MTQxMDYsImV4cCI6MTYyMjcxNzcwNn0.o63iY3Aek9yYrmdEEPl0c15o36ILs44AnX4oytReFxE",
                "description": "Refresh Token"
              },
              "user": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Users Email"
                  },
                  "name": {
                    "type": "string",
                    "example": "Vasya",
                    "description": "Users Name"
                  }
                }
              }
            }
          }
        }
      },
      "createTaskRequest": {
        "type": "object",
        "required": ["category", "difficulty", "title", "time"],
        "properties": {
          "category": {
            "type": "string",
            "example": "STUFF",
            "description": "Task category",
            "enum": [
              "STUFF",
              "FAMILY",
              "HEALTH",
              "LEARNING",
              "LEISURE",
              "WORK"
            ]
          },
          "difficulty": {
            "type": "string",
            "example": "EASY",
            "description": "Difficulty of task",
            "enum": ["HARD", "EASY", "NORMAL"]
          },
          "title": {
            "type": "string",
            "example": "Do something",
            "description": "Body task"
          },
          "time": {
            "type": "string",
            "example": "06.14.2021 20:30",
            "description": "Time of end task"
          },
          "challenge": {
            "type": "boolean",
            "example": false,
            "description": "Is challenge? Default: false"
          },
          "done": {
            "type": "boolean",
            "example": false,
            "description": "Is done? Default: false"
          }
        }
      },
      "updateStatusTaskRequest": {
        "type": "object",
        "required": ["done"],
        "properties": {
          "done": {
            "type": "boolean",
            "example": false,
            "description": "Is done?"
          }
        }
      },
      "createTaskResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "Success"
          },
          "code": {
            "type": "integer",
            "example": 201
          },
          "data": {
            "type": "object",
            "properties": {
              "category": {
                "type": "string",
                "example": "STUFF",
                "description": "Task category",
                "enum": [
                  "STUFF",
                  "FAMILY",
                  "HEALTH",
                  "LEARNING",
                  "LEISURE",
                  "WORK"
                ]
              },
              "difficulty": {
                "type": "string",
                "example": "EASY",
                "description": "Difficulty of task",
                "enum": ["HARD", "EASY", "NORMAL"]
              },
              "title": {
                "type": "string",
                "example": "Do something",
                "description": "Body task"
              },
              "time": {
                "type": "string",
                "example": "06.14.2021 20:30",
                "description": "Time of end task"
              },
              "challenge": {
                "type": "boolean",
                "example": false,
                "description": "Is challenge? Default: false"
              },
              "done": {
                "type": "boolean",
                "example": false,
                "description": "Is done? Default: false"
              },
              "_id": {
                "type": "string",
                "example": "60b8933d150add3b84d312cf",
                "description": "Task id"
              },
              "owner": {
                "type": "string",
                "example": "60b8933d150add3b84d312cf",
                "description": "Task-owner id"
              }
            }
          }
        }
      },
      "getAllTasksResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "Success"
          },
          "code": {
            "type": "integer",
            "example": 200
          },
          "data": {
            "items": {
              "type": "object",
              "properties": {
                "category": {
                  "type": "string",
                  "example": "STUFF",
                  "description": "Task category",
                  "enum": [
                    "STUFF",
                    "FAMILY",
                    "HEALTH",
                    "LEARNING",
                    "LEISURE",
                    "WORK"
                  ]
                },
                "difficulty": {
                  "type": "string",
                  "example": "EASY",
                  "description": "Difficulty of task",
                  "enum": ["HARD", "EASY", "NORMAL"]
                },
                "title": {
                  "type": "string",
                  "example": "Do something",
                  "description": "Body task"
                },
                "time": {
                  "type": "string",
                  "example": "06.14.2021 20:30",
                  "description": "Time of end task"
                },
                "challenge": {
                  "type": "boolean",
                  "example": false,
                  "description": "Is challenge? Default: false"
                },
                "done": {
                  "type": "boolean",
                  "example": false,
                  "description": "Is done? Default: false"
                },
                "_id": {
                  "type": "string",
                  "example": "60b8933d150add3b84d312cf",
                  "description": "Task id"
                },
                "owner": {
                  "type": "string",
                  "example": "60b8933d150add3b84d312cf",
                  "description": "Task-owner id"
                }
              }
            }
          }
        }
      },
      "deleteTaskResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "Success"
          },
          "code": {
            "type": "integer",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "category": {
                "type": "string",
                "example": "STUFF",
                "description": "Task category",
                "enum": [
                  "STUFF",
                  "FAMILY",
                  "HEALTH",
                  "LEARNING",
                  "LEISURE",
                  "WORK"
                ]
              },
              "difficulty": {
                "type": "string",
                "example": "EASY",
                "description": "Difficulty of task",
                "enum": ["HARD", "EASY", "NORMAL"]
              },
              "title": {
                "type": "string",
                "example": "Do something",
                "description": "Body task"
              },
              "time": {
                "type": "string",
                "example": "06.14.2021 20:30",
                "description": "Time of end task"
              },
              "challenge": {
                "type": "boolean",
                "example": false,
                "description": "Is challenge? Default: false"
              },
              "done": {
                "type": "boolean",
                "example": false,
                "description": "Is done? Default: false"
              },
              "_id": {
                "type": "string",
                "example": "60b8933d150add3b84d312cf",
                "description": "Task id"
              },
              "owner": {
                "type": "string",
                "example": "60b8933d150add3b84d312cf",
                "description": "Task-owner id"
              }
            }
          }
        }
      },
      "taskNotFound": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "Not Found"
          },
          "code": {
            "type": "integer",
            "example": "404"
          },
          "message": {
            "type": "string",
            "example": "Task not found"
          },
          "data": {
            "type": "string",
            "example": "Not Found"
          }
        }
      },
      "UNAUTHORIZED": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "Error"
          },
          "code": {
            "type": "integer",
            "example": "401"
          },
          "message": {
            "type": "string",
            "example": "UNAUTHORIZED"
          },
          "data": {
            "type": "string",
            "example": "UNAUTHORIZED"
          }
        }
      }
    },

    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
